---
# file: roles/common/tasks/main.yml
- name: packages install
  yum: name="{{ item }}" state=present
  with_items:
    - openssh-clients
    - libselinux-python

- name: disable selinux
  shell: setenforce Permissive
  when: ansible_selinux.status is undefined or ansible_selinux.status != "disabled"

- name: disable selinux setting
  lineinfile: >
    dest=/etc/selinux/config
    regexp='^SELINUX=.*'
    line="SELINUX=disabled"
    state=present
    backup=true
  register: is_selinux_setting

- name: generate hosts files
  lineinfile: >
    dest=/etc/hosts
    regexp='^{{ item }}.*'
    line="{{ item }} {{ hostvars[item].ansible_fqdn }} {{ hostvars[item].ansible_hostname }}"
    state=present
    backup=true
  when: hostvars[item].ansible_fqdn is defined
  register: is_hosts_setting
  with_items: "{{ groups['all'] }}"

- name: Add NOZEROCONF
  lineinfile: >
    dest=/etc/sysconfig/network
    regexp="^NOZEROCONF"
    line="NOZEROCONF=yes"
    state=present
    backup=true
  register: is_network_setting

- name: Disable ipv6
  lineinfile: >
    dest=/etc/modprobe.d/ipv6.conf
    regexp='^options ipv6 disable.*'
    line="options ipv6 disable=1"
    state=present
    create=yes
    backup=true
  register: is_ipv6_setting

- name: add ulimits settings
  template: >
    src=enableulimit.sh.j2
    dest=/etc/profile.d/enableulimit.sh
    owner=root
    group=root
    mode=0644
    backup=true
  register: is_ulimits_setting

- name: backup settings
  include: backup.yml
  with_items:
    - "{{ is_selinux_setting }}"
    - "{{ is_hosts_setting.results[0] }}"
    - "{{ is_network_setting }}"
    - "{{ is_ipv6_setting }}"
    - "{{ is_ulimits_setting }}"
  loop_control:
    loop_var: backup_item

- name: Add common group
  group: >
    name="{{ item.group }}"
    gid="{{ item.gid }}"
  with_items: "{{ common_user }}"
  when: common_user is defined and common_user != None

- name: Add common user
  user:
    name="{{ item.name }}"
    password="{{ item.password }}"
    uid="{{ item.uid }}"
    group="{{ item.group }}"
    comment="{{ item.name }}"
  with_items: "{{ common_user }}"
  when: common_user is defined and common_user != None

- name: CentOS6 only setting
  include: centos6.yml
  when: ansible_distribution_major_version == '6'

- name: CentOS7 only setting
  include: centos7.yml
  when: ansible_distribution_major_version == '7'

- name: reboot after change selinux
  shell: nohup bash -c "sleep 2s && reboot" &
  when: ansible_selinux.status is undefined or ansible_selinux.status != "disabled"

- name: wait for the server to go down (reboot)
  local_action: wait_for host={{ inventory_hostname }} port=22 state=stopped
  when: ansible_selinux.status is undefined or ansible_selinux.status != "disabled"

- name: wait for the server to come up
  local_action: wait_for host={{ inventory_hostname }} port=22
  when: ansible_selinux.status is undefined or ansible_selinux.status != "disabled"
